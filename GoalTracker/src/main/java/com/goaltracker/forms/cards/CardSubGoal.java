/*
 * CardSubGoal.java
 * - displays in inner subtask card for a task list goal
 *
 * Tyler Moquin
 *
 * VERSION HISTORY
 * v1.0.0   20230509   TAM   final working version
 * v0.0.1   20230321   TAM   initial implementation
 *
 */

package com.goaltracker.forms.cards;

import com.goaltracker.GoalTracker;
import com.goaltracker.config.Constants;
import com.goaltracker.goals.Goal;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;

public class CardSubGoal extends javax.swing.JPanel {
    private Goal theGoal;
    private Boolean notesBoxOpen = false;
    private CardTaskListGoal theParentCard;

    public CardSubGoal(Goal me, CardTaskListGoal aParent) {
        theGoal = me;
        theParentCard = aParent;
        initComponents();
        descriptionTextField.setText(theGoal.getDescription());
        if (theGoal.getIsCompleted()) {
            statusComboBox.setSelectedIndex(1);
            container.setBackground(Constants.TASK_DONE);
            container.setOpaque(true);
        } else {
            statusComboBox.setSelectedIndex(0);
            container.setOpaque(false);
        }
        saveDescriptionButton.setVisible(false);
        saveNotesButton.setVisible(false);
        notesTextArea.setText(theGoal.getNotes());
        notesScrollPane.getViewport().setOpaque(false);
        notesBox.setVisible(false);
        container.repaint();
        container.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        statusComboBox = new javax.swing.JComboBox<>();
        notesButton = new javax.swing.JButton();
        notesBox = new javax.swing.JPanel();
        notesPanel = new javax.swing.JPanel();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();
        saveNotesButton = new javax.swing.JButton();
        descriptionTextField = new javax.swing.JTextField();
        saveDescriptionButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 204));
        setOpaque(false);

        container.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        container.setOpaque(false);

        statusComboBox.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Done", "Done" }));
        statusComboBox.setSelectedIndex(-1);
        statusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusComboBoxActionPerformed(evt);
            }
        });

        notesButton.setFont(new java.awt.Font("Avenir Next", 0, 12)); // NOI18N
        notesButton.setText(Constants.SUBTASK_NOTES_LABEL_CLOSED);
        notesButton.setBorder(null);
        notesButton.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                notesButtonMouseReleased(evt);
            }
        });

        notesBox.setAlignmentY(0.0F);
        notesBox.setOpaque(false);

        notesPanel.setBackground(new java.awt.Color(0, 255, 51));
        notesPanel.setOpaque(false);

        notesScrollPane.setBorder(null);
        notesScrollPane.setOpaque(false);

        notesTextArea.setEditable(false);
        notesTextArea.setBackground(new java.awt.Color(255, 255, 255));
        notesTextArea.setColumns(1);
        notesTextArea.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        notesTextArea.setRows(1);
        notesTextArea.setMaximumSize(new java.awt.Dimension(32767, 80));
        notesTextArea.setMinimumSize(new java.awt.Dimension(0, 80));
        notesTextArea.setOpaque(false);
        notesTextArea.setPreferredSize(new java.awt.Dimension(0, 80));
        notesTextArea.setSize(new java.awt.Dimension(0, 80));
        notesTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                notesTextAreaMousePressed(evt);
            }
        });
        notesTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                notesTextAreaKeyReleased(evt);
            }
        });
        notesScrollPane.setViewportView(notesTextArea);

        saveNotesButton.setFont(new java.awt.Font("Avenir Next", 0, 18)); // NOI18N
        saveNotesButton.setText("✔");
        saveNotesButton.setMaximumSize(new java.awt.Dimension(32767, 32767));
        saveNotesButton.setMinimumSize(new java.awt.Dimension(0, 0));
        saveNotesButton.setPreferredSize(new java.awt.Dimension(52, 20));
        saveNotesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveNotesButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout notesPanelLayout = new javax.swing.GroupLayout(notesPanel);
        notesPanel.setLayout(notesPanelLayout);
        notesPanelLayout.setHorizontalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notesPanelLayout.createSequentialGroup()
                .addComponent(notesScrollPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveNotesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        notesPanelLayout.setVerticalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveNotesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout notesBoxLayout = new javax.swing.GroupLayout(notesBox);
        notesBox.setLayout(notesBoxLayout);
        notesBoxLayout.setHorizontalGroup(
            notesBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notesBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        notesBoxLayout.setVerticalGroup(
            notesBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notesBoxLayout.createSequentialGroup()
                .addComponent(notesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        descriptionTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        descriptionTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                descriptionTextFieldMousePressed(evt);
            }
        });
        descriptionTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descriptionTextFieldKeyReleased(evt);
            }
        });

        saveDescriptionButton.setFont(new java.awt.Font("Avenir Next", 0, 18)); // NOI18N
        saveDescriptionButton.setText("✔");
        saveDescriptionButton.setMaximumSize(new java.awt.Dimension(32767, 32767));
        saveDescriptionButton.setMinimumSize(new java.awt.Dimension(0, 0));
        saveDescriptionButton.setPreferredSize(new java.awt.Dimension(52, 20));
        saveDescriptionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveDescriptionButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(notesBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(containerLayout.createSequentialGroup()
                        .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveDescriptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(notesButton)))
                .addContainerGap())
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notesButton)
                    .addComponent(saveDescriptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(notesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void notesButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notesButtonMouseReleased
        if (!notesBoxOpen) {
            notesBox.setVisible(true);
            notesButton.setText(Constants.SUBTASK_NOTES_LABEL_OPENED);
            notesBoxOpen = true;
        } else {
            notesBox.setVisible(false);
            notesButton.setText(Constants.SUBTASK_NOTES_LABEL_CLOSED);
            notesBoxOpen = false;
        }
        notesButton.setOpaque(false);
        notesButton.setBorder(null);
        theParentCard.refreshTaskList();
    }//GEN-LAST:event_notesButtonMouseReleased

    private void notesTextAreaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notesTextAreaMousePressed
        saveNotesButton.setVisible(true);
        notesTextArea.setEditable(true);
        notesTextArea.setOpaque(true);
        notesTextArea.getCaret().setVisible(true);
        notesTextArea.setSize(notesTextArea.getPreferredSize());
        notesTextArea.repaint();
        notesTextArea.validate();
    }//GEN-LAST:event_notesTextAreaMousePressed

    private void notesTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesTextAreaKeyReleased
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_ESCAPE) {
            notesTextArea.setText(theGoal.getNotes());
            notesTextArea.setEditable(false);
            notesTextArea.setOpaque(false);
            notesTextArea.setCaretPosition(0);
            saveNotesButton.setVisible(false);
            notesTextArea.repaint();
            notesTextArea.validate();
        }
    }//GEN-LAST:event_notesTextAreaKeyReleased

    private void saveNotesButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveNotesButtonMouseReleased
        theGoal.setNotes(notesTextArea.getText());
        notesTextArea.setEditable(false);
        notesTextArea.setOpaque(false);
        notesTextArea.setCaretPosition(0);
        GoalTracker.save();
        saveNotesButton.setVisible(false);
    }//GEN-LAST:event_saveNotesButtonMouseReleased

    private void statusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusComboBoxActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        String sel = (String)source.getSelectedItem();
        if (sel.equals("Done")) {
            theGoal.setIsCompleted(true);
            container.setBackground(Constants.TASK_DONE);
            container.setOpaque(true);
            GoalTracker.save();
            theParentCard.incrementTasksDone();
        } else {
            theGoal.setIsCompleted(false);
            container.setOpaque(false);
            GoalTracker.save();
            theParentCard.decrementTasksDone();
        }
        container.repaint();
        container.validate();
    }//GEN-LAST:event_statusComboBoxActionPerformed

    private void saveDescriptionButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDescriptionButtonMouseReleased
        theGoal.setDescription(descriptionTextField.getText());
        descriptionTextField.setEditable(false);
        descriptionTextField.setOpaque(false);
        descriptionTextField.getCaret().setVisible(false);
        saveDescriptionButton.setVisible(false);
        GoalTracker.save();
    }//GEN-LAST:event_saveDescriptionButtonMouseReleased

    private void descriptionTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descriptionTextFieldMousePressed
        descriptionTextField.setEditable(true);
        descriptionTextField.setOpaque(true);
        descriptionTextField.getCaret().setVisible(true);
        saveDescriptionButton.setVisible(true);
    }//GEN-LAST:event_descriptionTextFieldMousePressed

    private void descriptionTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextFieldKeyReleased
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_ENTER) {
            theGoal.setDescription(descriptionTextField.getText());
            descriptionTextField.setEditable(false);
            descriptionTextField.getCaret().setVisible(false);
            descriptionTextField.setOpaque(false);
            saveDescriptionButton.setVisible(false);
            GoalTracker.save();
        } else if(keyCode == KeyEvent.VK_ESCAPE) {
            descriptionTextField.setText(theGoal.getDescription());
            descriptionTextField.setEditable(false);
            descriptionTextField.getCaret().setVisible(false);
            descriptionTextField.setOpaque(false);
            saveDescriptionButton.setVisible(false);
        }
    }//GEN-LAST:event_descriptionTextFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JPanel notesBox;
    private javax.swing.JButton notesButton;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    private javax.swing.JButton saveDescriptionButton;
    private javax.swing.JButton saveNotesButton;
    private javax.swing.JComboBox<String> statusComboBox;
    // End of variables declaration//GEN-END:variables
}
